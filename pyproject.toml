[project]
name = "pyfaststack"
version = "1.0.0"
description = "A modern, production-ready Python web application template with FastAPI"
readme = "README.md"
requires-python = ">=3.13"
license = {text = "MIT"}
authors = [
    {name = "George Khananaev", email = "george@khananaev.com"},
]
keywords = ["fastapi", "web", "template", "async", "authentication", "tailwind"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Framework :: FastAPI",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]

dependencies = [
    "fastapi>=0.116.0",
    "gunicorn>=23.0.0",
    "uvicorn[standard]>=0.35.0",
    "sqlalchemy>=2.0.41",
    "aiosqlite>=0.21.0",
    "greenlet>=3.2.3",
    "python-jose[cryptography]>=3.5.0",
    "passlib[bcrypt]>=1.7.4",
    "bcrypt==4.0.1",
    "python-multipart>=0.0.20",
    "email-validator>=2.2.0",
    "pydantic>=2.11.7",
    "pydantic-settings>=2.10.1",
    "jinja2>=3.1.6",
    "python-dotenv>=1.1.1",
    "colorama>=0.4.6",
    "requests>=2.32.4",
    "slowapi>=0.1.9",
    "psutil>=6.1.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.9.2",
    "mypy>=1.14.1",
    "black>=24.12.0",
    "pre-commit>=4.0.1",
]
test = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "httpx>=0.28.1",
    "pytest-cov>=6.2.1",
    "requests>=2.32.4",
    "aiohttp>=3.11.0",
]
postgres = [
    "asyncpg>=0.30.0",
    "psycopg[binary]>=3.2.3",
]

[project.urls]
Homepage = "https://george.khananaev.com/"
Documentation = "https://github.com/georgekhananaev/py-fast-stack"
Repository = "https://github.com/georgekhananaev/py-fast-stack"
Issues = "https://github.com/georgekhananaev/py-fast-stack/issues"
Author = "https://george.khananaev.com/"

[project.scripts]
pyfaststack = "app.main:run"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.ruff]
line-length = 88
target-version = "py313"
fix = true

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "SIM",  # flake8-simplify
]
ignore = [
    "E501",  # line too long
    "B008",  # do not perform function calls in argument defaults
    "B904",  # raise without from inside except
]

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true


[tool.black]
line-length = 88
target-version = ["py313"]
include = '\.pyi?$'

[tool.uv]
compile-bytecode = true

[tool.pytest.ini_options]
addopts = "-p no:warnings"
markers = [
    "rate_limit: marks tests as rate limit tests (deselect with '-m \"not rate_limit\"')",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
